version: '2'
services:
  # --------------------------------------------------------------------------
  # HTTP Server
  # --------------------------------------------------------------------------
  nginx:
    build: ./nginx/
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    command: bash app/run_nginx.sh
    volumes:
      - .nginx/logs:/var/log/nginx
#    volumes_from:
#      - web
    volumes:
      - .:/app
    links:
      - web:web


  # --------------------------------------------------------------------------
  # Celery Workers
  # --------------------------------------------------------------------------
  db:
    image: mysql:5.7
    hostname: db
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
    ports:
      - 3306:3306

  
  # --------------------------------------------------------------------------
  # Message queue
  # --------------------------------------------------------------------------
  rabbit:
    image: rabbitmq:3.5.7
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672" 
      - "15672:15672"

  flower:
    image: totem/celery-flower-docker
    hostname: flower
    ports:
      - "5555:5555"
    environment:
      - AMQP_USERNAME=${AMQP_USERNAME}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - AMQP_HOST=rabbit
      - AMQP_PORT=${AMQP_PORT}
      - FLOWER_BASIC_AUTH=${FLOWER_BASIC_AUTH}
    volumes:
      - .:/app
    links:
      - rabbit


  # --------------------------------------------------------------------------
  # Cache
  # --------------------------------------------------------------------------
  memcached:
    image: memcached
    hostname: memcached
    ports:
      - "11211:11211"
    command: "/usr/local/bin/memcached -u memcache -vv"


  # --------------------------------------------------------------------------
  # Django
  # --------------------------------------------------------------------------
  web:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: web
    command: bash run_web.sh
    volumes:
      - .:/app
    env_file: .env 
    ports:
      - "8000:8000"
    links:
      - db
      - rabbit
      - memcached


  # --------------------------------------------------------------------------
  # Celery Workers
  # --------------------------------------------------------------------------
  # Site worker
  site:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh run_site.sh
    volumes:
      - .:/app
    links:
      - db
      - rabbit
      
  # Compute worker
  compute:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh run_compute.sh
    volumes:
      - .:/app
    links:
      - db
      - rabbit
